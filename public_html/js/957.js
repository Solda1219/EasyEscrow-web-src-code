"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[957],{1754:(t,e,r)=>{r.d(e,{Z:()=>i});var n=r(7294),o=r(5893);function c(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,o,c=[],a=!0,i=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(c.push(n.value),!e||c.length!==e);a=!0);}catch(t){i=!0,o=t}finally{try{a||null==r.return||r.return()}finally{if(i)throw o}}return c}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return a(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return a(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}const i=function(t){var e,r=t.options,a=t.selectedOption,i=t.setSelectedOption,s=c((0,n.useState)(!1),2),l=s[0],u=s[1],d=(0,n.useRef)(null);return(0,n.useEffect)((function(){function t(t){d.current&&!d.current.contains(t.target)&&u(!1)}return document.addEventListener("mousedown",t),function(){document.removeEventListener("mousedown",t)}}),[d]),(0,o.jsxs)("div",{className:"dropdown",ref:d,children:[(0,o.jsx)("div",{className:"dropdown-header",onClick:function(){return u(!l)},children:a?null===(e=r.find((function(t){return t.currency===a.currency})))||void 0===e?void 0:e.currency:"select a token"}),(0,o.jsx)("div",{className:"dropdown-body ".concat(l&&"open"),children:(0,o.jsx)("ul",{children:(r||[]).map((function(t,e){return(0,o.jsx)("li",{className:"dropdown-item",id:t.currency,onClick:function(e){i(t),u(!1)},children:t.currency},t.currency)}))})})]})}},1062:(t,e,r)=>{r.d(e,{Q:()=>n});var n=[{currency:"XPR",contract:"eosio.token",decimals:"4"},{decimals:"4",contract:"loan.token",currency:"LOAN"},{currency:"FOOBAR",contract:"xtokens",decimals:"6"},{decimals:"4",contract:"storex",currency:"STRX"},{currency:"BTCL",contract:"wrapper",decimals:"8"},{currency:"XADA",decimals:"6",contract:"xtokens"},{currency:"XBCH",contract:"xtokens",decimals:"8"},{contract:"xtokens",decimals:"8",currency:"XBNB"},{currency:"XBTC",contract:"xtokens",decimals:"8"},{currency:"XBUSD",contract:"xtokens",decimals:"6"},{currency:"XDOGE",contract:"xtokens",decimals:"6"},{contract:"xtokens",decimals:"8",currency:"XDOT"},{decimals:"4",contract:"xtokens",currency:"XEOS"},{contract:"xtokens",decimals:"8",currency:"XETH"},{currency:"XLTC",contract:"xtokens",decimals:"8"},{decimals:"6",contract:"xtokens",currency:"XLUNA"},{contract:"xtokens",decimals:"6",currency:"XMDA"},{currency:"XMT",decimals:"8",contract:"xtokens"},{currency:"XPAX",contract:"xtokens",decimals:"6"},{currency:"XPAXG",contract:"xtokens",decimals:"8"},{currency:"XSOL",contract:"xtokens",decimals:"6"},{currency:"XTUSD",contract:"xtokens",decimals:"6"},{contract:"xtokens",decimals:"6",currency:"XUNI"},{currency:"XUSDC",contract:"xtokens",decimals:"6"},{contract:"xtokens",decimals:"6",currency:"XUSDT"},{contract:"xtokens",decimals:"6",currency:"XUST"},{currency:"XXRP",contract:"xtokens",decimals:"6"}]},7957:(t,e,r)=>{r.r(e),r.d(e,{default:()=>v});var n=r(7294),o=r(4572),c=r(9553),a=r(6608),i=r(1754),s=(r(1062),r(2104)),l=r(6974),u=r(5893);function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function f(){/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */f=function(){return t};var t={},e=Object.prototype,r=e.hasOwnProperty,n="function"==typeof Symbol?Symbol:{},o=n.iterator||"@@iterator",c=n.asyncIterator||"@@asyncIterator",a=n.toStringTag||"@@toStringTag";function i(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{i({},"")}catch(t){i=function(t,e,r){return t[e]=r}}function s(t,e,r,n){var o=e&&e.prototype instanceof h?e:h,c=Object.create(o.prototype),a=new N(n||[]);return c._invoke=function(t,e,r){var n="suspendedStart";return function(o,c){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw c;return E()}for(r.method=o,r.arg=c;;){var a=r.delegate;if(a){var i=j(a,r);if(i){if(i===u)continue;return i}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var s=l(t,e,r);if("normal"===s.type){if(n=r.done?"completed":"suspendedYield",s.arg===u)continue;return{value:s.arg,done:r.done}}"throw"===s.type&&(n="completed",r.method="throw",r.arg=s.arg)}}}(t,r,a),c}function l(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=s;var u={};function h(){}function m(){}function y(){}var p={};i(p,o,(function(){return this}));var v=Object.getPrototypeOf,x=v&&v(v(L([])));x&&x!==e&&r.call(x,o)&&(p=x);var g=y.prototype=h.prototype=Object.create(p);function w(t){["next","throw","return"].forEach((function(e){i(t,e,(function(t){return this._invoke(e,t)}))}))}function b(t,e){function n(o,c,a,i){var s=l(t[o],t,c);if("throw"!==s.type){var u=s.arg,f=u.value;return f&&"object"==d(f)&&r.call(f,"__await")?e.resolve(f.__await).then((function(t){n("next",t,a,i)}),(function(t){n("throw",t,a,i)})):e.resolve(f).then((function(t){u.value=t,a(u)}),(function(t){return n("throw",t,a,i)}))}i(s.arg)}var o;this._invoke=function(t,r){function c(){return new e((function(e,o){n(t,r,e,o)}))}return o=o?o.then(c,c):c()}}function j(t,e){var r=t.iterator[e.method];if(void 0===r){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,j(t,e),"throw"===e.method))return u;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var n=l(r,t.iterator,e.arg);if("throw"===n.type)return e.method="throw",e.arg=n.arg,e.delegate=null,u;var o=n.arg;return o?o.done?(e[t.resultName]=o.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,u):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,u)}function k(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function S(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function N(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(k,this),this.reset(!0)}function L(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,c=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return c.next=c}}return{next:E}}function E(){return{value:void 0,done:!0}}return m.prototype=y,i(g,"constructor",y),i(y,"constructor",m),m.displayName=i(y,a,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===m||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,i(t,a,"GeneratorFunction")),t.prototype=Object.create(g),t},t.awrap=function(t){return{__await:t}},w(b.prototype),i(b.prototype,c,(function(){return this})),t.AsyncIterator=b,t.async=function(e,r,n,o,c){void 0===c&&(c=Promise);var a=new b(s(e,r,n,o),c);return t.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},w(g),i(g,a,"Generator"),i(g,o,(function(){return this})),i(g,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=[];for(var r in t)e.push(r);return e.reverse(),function r(){for(;e.length;){var n=e.pop();if(n in t)return r.value=n,r.done=!1,r}return r.done=!0,r}},t.values=L,N.prototype={constructor:N,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return a.type="throw",a.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var c=this.tryEntries[o],a=c.completion;if("root"===c.tryLoc)return n("end");if(c.tryLoc<=this.prev){var i=r.call(c,"catchLoc"),s=r.call(c,"finallyLoc");if(i&&s){if(this.prev<c.catchLoc)return n(c.catchLoc,!0);if(this.prev<c.finallyLoc)return n(c.finallyLoc)}else if(i){if(this.prev<c.catchLoc)return n(c.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return n(c.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var c=o;break}}c&&("break"===t||"continue"===t)&&c.tryLoc<=e&&e<=c.finallyLoc&&(c=null);var a=c?c.completion:{};return a.type=t,a.arg=e,c?(this.method="next",this.next=c.finallyLoc,u):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),u},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),S(r),u}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;S(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:L(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),u}},t}function h(t,e,r,n,o,c,a){try{var i=t[c](a),s=i.value}catch(t){return void r(t)}i.done?e(s):Promise.resolve(s).then(n,o)}function m(t){return function(){var e=this,r=arguments;return new Promise((function(n,o){var c=t.apply(e,r);function a(t){h(c,n,o,a,i,"next",t)}function i(t){h(c,n,o,a,i,"throw",t)}a(void 0)}))}}function y(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==r)return;var n,o,c=[],a=!0,i=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(c.push(n.value),!e||c.length!==e);a=!0);}catch(t){i=!0,o=t}finally{try{a||null==r.return||r.return()}finally{if(i)throw o}}return c}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return p(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return p(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}const v=function(){var t=(0,l.s0)(),e=(0,n.useContext)(a.Z),r=(0,n.useContext)(s.Z),d=y((0,n.useState)(!1),2),h=d[0],p=d[1],v=y((0,n.useState)(""),2),x=v[0],g=v[1],w=y((0,n.useState)(""),2),b=w[0],j=w[1],k=y((0,n.useState)(""),2),S=k[0],N=k[1],L=y((0,n.useState)(!1),2),E=L[0],C=L[1],O=y((0,n.useState)(""),2),A=O[0],X=O[1],P=y((0,n.useState)(""),2),_=P[0],T=P[1],F=y((0,n.useState)("date"),2),I=F[0],D=F[1],G=y((0,n.useState)(""),2),U=G[0],B=G[1],Z=y((0,n.useState)({currency:"Select a token",amount:"0"}),2),R=Z[0],M=Z[1],H=y((0,n.useState)([{currency:"Select a token",amount:"0"}]),2),Y=H[0],$=H[1];(0,n.useEffect)((function(){r.balances!=[]&&r.balances.length>0&&(M(r.balances[0]),$(r.balances))}),[r.balances]);var q=y((0,n.useState)(!1),2),z=q[0],J=q[1],Q=function(){try{C(!0),fetch("".concat("https://easyescrow.io/api","/user/addescrow"),{method:"POST",body:JSON.stringify({type_id:5,amount:U,token:R,title:A,description:_,pool_type:I}),headers:{Authorization:"Bearer "+e.token,"Content-Type":"application/json"}}).then((function(t){return t.json()})).then((function(t){t.valid?(setConfirmationPopup(!1),p(!0),j(t.message)):g(t.message),C(!1)})).catch((function(t){g(t),C(!1)}))}catch(t){console.error(t)}};return(0,u.jsxs)(n.Fragment,{children:[(0,u.jsxs)("main",{children:[(0,u.jsx)("div",{className:"container banner-inner",children:(0,u.jsx)("h1",{children:"Pool / Contest"})}),(0,u.jsx)("div",{className:"container block",children:(0,u.jsxs)("form",{onSubmit:function(t){t.preventDefault(),(""==A||""==_||""==U||""==R?(g("All fields are required."),0):z?(g(""),1):(g(""),N("Please tick the checkbox to confirm exchange"),0))&&Q()},children:[(0,u.jsxs)("div",{className:"form-row",children:[(0,u.jsx)("label",{htmlFor:"contest-title",children:"Add a title for the Pool / Contest"}),(0,u.jsx)("input",{type:"text",id:"contest-title",value:A,onChange:function(t){return X(t.target.value)}})]}),(0,u.jsxs)("div",{className:"form-row",children:[(0,u.jsx)("label",{htmlFor:"contest-desc",children:"Description of Pool / Contest"}),(0,u.jsx)("textarea",{id:"contest-desc",value:_,onChange:function(t){return T(t.target.value)}})]}),(0,u.jsxs)("div",{className:"form-row",children:[(0,u.jsx)("label",{children:"Pool is for:"}),(0,u.jsxs)("div",{className:"radio",children:[(0,u.jsx)("input",{type:"radio",id:"cal-date",name:"pool-for",value:"Calendar date",checked:"date"==I,onChange:function(){return D("date")}}),(0,u.jsx)("label",{htmlFor:"cal-date",children:"A Calendar date"})]}),(0,u.jsxs)("div",{className:"radio",children:[(0,u.jsx)("input",{type:"radio",id:"numerical",name:"pool-for",value:"Numerical value",checked:"integer"==I,onChange:function(){return D("integer")}}),(0,u.jsx)("label",{htmlFor:"numerical",children:"A Numerical value"})]}),(0,u.jsx)("small",{children:"a numerical value can be assigned to any item as its representation and placed in the description box. Such as 1 for red, 2 for blue, 3 for green, etc."})]}),(0,u.jsxs)("div",{className:"form-row",children:[(0,u.jsx)("label",{htmlFor:"contest_token",children:"Select a token that you wish to use for this pool / contest:"}),(0,u.jsx)(i.Z,{options:Y,selectedOption:R,setSelectedOption:M})]}),(0,u.jsxs)("div",{className:"form-row",children:[(0,u.jsx)("label",{htmlFor:"contest-amount",children:"Enter a numerical amount that each user will contribute to the pool / contest:"}),(0,u.jsx)("input",{type:"number",step:"0.01",id:"contest-amount",value:U,onChange:function(t){return B(t.target.value)}})]}),(0,u.jsx)("div",{className:"form-row confirm-check",children:(0,u.jsx)("input",{type:"checkbox",id:"contest-item",name:"contest-item"})}),(0,u.jsx)("div",{className:"form-row",children:(0,u.jsx)("p",{children:"Please confirm the following proposed purchase"})}),(0,u.jsxs)("div",{className:"form-row confirm-check",children:[(0,u.jsx)("input",{type:"checkbox",id:"crypto_exchange",name:"crypto_exchange",value:z,onChange:function(t){return J(t.target.checked)}}),(0,u.jsx)("label",{htmlFor:"crypto_exchange",children:"Please confirm to add ".concat(U||"(token numerical amount)"," ").concat(R||"(token name)"," to the pool/contest.")})]}),(0,u.jsx)("div",{className:"form-row",children:(0,u.jsx)("p",{children:(0,u.jsx)("small",{children:"If this is correct please confirm and your crypto will be moved out of your Proton wallet into the EasyEscrow Smart Contract."})})}),""!==S&&(0,u.jsx)("div",{className:"form-row error",children:S}),""!==x&&(0,u.jsx)("div",{className:"form-row error",children:x}),e.isLoggedIn&&(0,u.jsx)("div",{className:"form-row",children:(0,u.jsx)(c.Z,{label:"Confirm",type:"submit",loading:E})}),!e.isLoggedIn&&(0,u.jsx)("div",{className:"form-row",children:(0,u.jsx)(c.Z,{label:"Login",onClick:m(f().mark((function t(){return f().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,r.protonConnection();case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)}))),loading:E})})]})})]}),h&&(0,u.jsx)(o.Z,{hidePopup:function(){return p(!1)},children:(0,u.jsxs)("div",{children:[(0,u.jsx)("h3",{className:"modal-header",children:"Pool / Contest"}),(0,u.jsx)("div",{className:"form-row success",children:(0,u.jsx)("p",{children:b})}),(0,u.jsx)("div",{className:"modal-confirm",children:(0,u.jsx)(c.Z,{label:"Continue",onClick:function(){p(!1),t("/transactions")}})})]})})]})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,